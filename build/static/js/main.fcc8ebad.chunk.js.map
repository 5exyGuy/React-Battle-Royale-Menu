{"version":3,"sources":["cache.js","components/queue/Queue.js","components/character/Character.js","components/settings/Settings.js","components/exit/Exit.js","components/discord/Discord.js","index.js"],"names":["dataStorage","discord","isAuthenticated","onlinePlayers","playing","waiting","queue","isGameGoingOn","timePassed","alive","circleStage","settings","language","effectsVolume","musicVolume","character","save","name","data","get","Header","Content","formItemLayout","wrapperCol","xs","span","sm","Queue","props","state","cache","this","setState","style","backgroundColor","padding","title","subTitle","marginTop","layout","paddingLeft","paddingRight","Item","label","marginBottom","color","size","textAlign","type","block","disabled","React","Component","Character","helmet","current","icon","className","shirt","pants","boots","itemLayout","dataSource","Object","values","renderItem","item","borderBottom","extra","Meta","description","supportedLanguages","Settings","direction","langIndex","indexOf","length","fontSize","height","onClick","languageChange","bind","shape","borderColor","lineHeight","defaultValue","value","Exit","window","alt","emit","Discord","token","invite","undefined","EventEmitter","on","ready","done","setTimeout","target","document","createElement","body","appendChild","select","setSelectionRange","execCommand","removeChild","href","copy","components","id","component","App","currentPage","mainClass","updateOnlinePlayers","hasOwnProperty","bordered","prefix","map","key","changePage","marginRight","find","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fcc8ebad.chunk.js","sourcesContent":["let dataStorage = {\r\n  discord: {\r\n    isAuthenticated: false\r\n  },\r\n  onlinePlayers: {\r\n    playing: 0,\r\n    waiting: 0\r\n  },\r\n  queue: {\r\n    isGameGoingOn: false,\r\n    timePassed: '00:00:00',\r\n    alive: 0,\r\n    circleStage: 0\r\n  },\r\n  settings: {\r\n    language: 'English',\r\n    effectsVolume: 100,\r\n    musicVolume: 100\r\n  },\r\n  character: {\r\n\r\n  }\r\n};\r\n\r\nexport function save(name, data) {\r\n  dataStorage[name] = data;\r\n}\r\n\r\nexport function get(name) {\r\n  return dataStorage[name];\r\n}","import React from 'react';\r\nimport { Layout, PageHeader, Form, Button, Badge } from 'antd';\r\nimport './Queue.css';\r\nimport { GiSandsOfTime, GiRun, GiDeathZone } from \"react-icons/gi\";\r\nimport * as cache from '../../cache';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nconst formItemLayout = {\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 24 },\r\n  }\r\n};\r\n\r\nexport default class Queue extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isGameGoingOn: false,\r\n      timePassed: '00:00:00',\r\n      alive: 0,\r\n      circleStage: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const data = cache.get('queue');\r\n    this.setState({\r\n      isGameGoingOn: data.isGameGoingOn,\r\n      timePassed: data.timePassed,\r\n      alive: data.alive,\r\n      circleStage: data.circleStage\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    cache.save('queue', {\r\n      isGameGoingOn: this.state.isGameGoingOn,\r\n      timePassed: this.state.timePassed,\r\n      alive: this.state.alive,\r\n      circleStage: this.state.circleStage\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout style={{ backgroundColor: 'transparent' }}>\r\n        <Header style={{ backgroundColor: 'transparent', padding: '0'}}>\r\n          <PageHeader\r\n            title='Queue'\r\n            subTitle='Prepare for the battle'\r\n          />\r\n        </Header>\r\n        <Layout style={{ backgroundColor: 'transparent',  marginTop: '40px'  }}>\r\n          <Content>\r\n            <Form layout='vertical' {...formItemLayout} style={{ paddingLeft: '24px', paddingRight: '24px' }}>\r\n              <Form.Item label={<div><GiSandsOfTime /> Time Passed</div>} style={{ marginBottom: '0' }}>\r\n                <Badge color={ this.state.isGameGoingOn ? 'red' : 'blue' } /> { this.state.isGameGoingOn ? this.state.timePassed : '00:00:00' }\r\n              </Form.Item>\r\n              <Form.Item label={<div><GiRun /> Alive</div>} style={{ marginBottom: '0' }}>\r\n                <Badge color={ this.state.isGameGoingOn ? 'red' : 'blue' } /> { this.state.isGameGoingOn ? this.state.alive : '0' } players\r\n              </Form.Item>\r\n              <Form.Item label={<div><GiDeathZone /> Circle Stage</div>}>\r\n                <Badge color={ this.state.isGameGoingOn ? 'red' : 'blue' } /> Stage { this.state.isGameGoingOn ? this.state.circleStage : '0' }\r\n              </Form.Item>\r\n              <Form.Item>\r\n                { this.state.isGameGoingOn ? <Button\r\n                  size='large'\r\n                  style={{ textAlign: 'left', backgroundColor: 'rgba(0,0,0,0.7)' }}\r\n                  type='ghost'\r\n                  block\r\n                >\r\n                  Join The Queue\r\n                </Button> : <Button\r\n                  size='large'\r\n                  style={{ textAlign: 'left', backgroundColor: 'rgba(0,0,0,0.7)' }}\r\n                  type='ghost'\r\n                  disabled\r\n                  block\r\n                >\r\n                  Join The Queue\r\n                </Button> }\r\n              </Form.Item>\r\n            </Form>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n}","import React from 'react';\r\nimport { Layout, PageHeader, List } from 'antd';\r\nimport './Character.css';\r\nimport { GiStahlhelm, GiKevlarVest, GiArmoredPants, GiBoots } from \"react-icons/gi\";\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nexport default class Character extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      helmet: {\r\n        name: 'Helmet',\r\n        current: 'None',\r\n        icon: <GiStahlhelm\r\n          className='zoom'\r\n          size='5em' \r\n          color='#3a4a63' \r\n        />\r\n      },\r\n      shirt: {\r\n        name: 'Shirt',\r\n        current: 'None',\r\n        icon: <GiKevlarVest \r\n          className='zoom'\r\n          size='5em' \r\n          color='#3a4a63' \r\n        />\r\n      },\r\n      pants: {\r\n        name: 'Pants',\r\n        current: 'None',\r\n        icon: <GiArmoredPants \r\n          className='zoom'\r\n          size='5em' \r\n          color='#3a4a63' \r\n        />\r\n      },\r\n      boots: {\r\n        name: 'Boots',\r\n        current: 'None',\r\n        icon: <GiBoots\r\n          className='zoom'\r\n          size='5em' \r\n          color='#3a4a63' \r\n        />\r\n      }\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout style={{ backgroundColor: 'transparent' }}>\r\n        <Header style={{ backgroundColor: 'transparent', padding: '0' }}>\r\n          <PageHeader\r\n            title='Character'\r\n            subTitle='Customize your appearance'\r\n          />\r\n        </Header>\r\n        <Layout style={{ backgroundColor: 'transparent',  marginTop: '40px'  }}>\r\n          <Content>\r\n            <List\r\n              style={{ paddingLeft: '24px', paddingRight: '24px' }}\r\n              itemLayout='horizontal'\r\n              dataSource={Object.values(this.state)}\r\n              renderItem={item => (\r\n                <List.Item style={{ borderBottom: '0', marginBottom: '10px' }} extra={item.icon}>\r\n                  <List.Item.Meta title={item.name} description={item.current} />\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n}","import React from 'react';\r\nimport { Layout, PageHeader, Tag, Form, Slider, Row, Col, Button } from 'antd';\r\nimport './Settings.css';\r\nimport * as cache from '../../cache';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nconst formItemLayout = {\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 24 },\r\n  }\r\n};\r\n\r\nconst supportedLanguages = [\r\n  'English',\r\n  'Lithuanian'\r\n];\r\n\r\nexport default class Settings extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      language: 'English',\r\n      effectsVolume: 100,\r\n      musicVolume: 100\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const data = cache.get('settings');\r\n    this.setState({\r\n      language: data.language,\r\n      effectsVolume: data.effectsVolume,\r\n      musicVolume: data.musicVolume\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    cache.save('settings', {\r\n      language: this.state.language,\r\n      effectsVolume: this.state.effectsVolume,\r\n      musicVolume: this.state.musicVolume\r\n    });\r\n  }\r\n\r\n  languageChange(direction) {\r\n    let langIndex = supportedLanguages.indexOf(this.state.language);\r\n    switch (direction) {\r\n      case 'left':\r\n        langIndex++;\r\n        if (langIndex >= supportedLanguages.length) {\r\n          langIndex = 0;\r\n        }\r\n        this.setState({ language: supportedLanguages[langIndex] });\r\n        break;\r\n      case 'right':\r\n        langIndex--;\r\n        if (langIndex < 0) {\r\n          langIndex = supportedLanguages.length - 1;\r\n        }\r\n        this.setState({ language: supportedLanguages[langIndex] });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout style={{ backgroundColor: 'transparent' }}>\r\n        <Header style={{ backgroundColor: 'transparent', padding: '0'}}>\r\n          <PageHeader\r\n            title='Settings'\r\n            subTitle='Adjust the settings to your liking'\r\n          />\r\n        </Header>\r\n        <Layout style={{ backgroundColor: 'transparent',  marginTop: '40px'  }}>\r\n          <Content>\r\n            <Form layout='vertical' {...formItemLayout} style={{ paddingLeft: '24px', paddingRight: '24px' }}>\r\n              <Form.Item>\r\n                <div style={{ fontSize: '18px', color: 'white' }}>Language <Tag color='#FF0000'>Soon</Tag></div>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Row>\r\n                  <Col span={6} style={{ textAlign: 'left', height: '32px' }}>\r\n                    <Button\r\n                      onClick={this.languageChange.bind(this, 'left')}\r\n                      shape='circle'\r\n                      icon='left'\r\n                      style={{ backgroundColor: 'transparent', borderColor: 'transparent' }}\r\n                    />\r\n                  </Col>\r\n                  {/* TODO: Center the text */}\r\n                  <Col span={12} style={{ height: '32px', textAlign: 'center', lineHeight: '34px' }}>\r\n                    {this.state.language}\r\n                  </Col>\r\n                  <Col span={6} style={{ textAlign: 'right', height: '32px' }}>\r\n                    <Button\r\n                      onClick={this.languageChange.bind(this, 'left')}\r\n                      shape='circle'\r\n                      icon='right'\r\n                      style={{ backgroundColor: 'transparent', borderColor: 'transparent' }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Form.Item>\r\n            </Form>\r\n            <Form layout='vertical' {...formItemLayout} style={{ paddingLeft: '24px', paddingRight: '24px' }}>\r\n              <Form.Item>\r\n                <div style={{ fontSize: '18px', color: 'white' }}>Audio <Tag color='#FF0000'>Soon</Tag></div>\r\n              </Form.Item>\r\n              <Form.Item label='Effects' style={{ marginBottom: '0' }}>\r\n                <Slider defaultValue={100} />\r\n              </Form.Item>\r\n              <Form.Item label='Music'>\r\n                <Slider defaultValue={100} value={this.state.musicVolume} />\r\n              </Form.Item>\r\n            </Form>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n}","import React from 'react';\r\n\r\nexport default class Exit extends React.Component {\r\n\r\n  componentDidMount() {\r\n    /*eslint-disable no-undef*/\r\n    if ('alt' in window) {\r\n      alt.emit('main-menu:Exit');\r\n    }\r\n    /*eslint-disable no-undef*/\r\n  }\r\n\r\n  render() {\r\n    return (<div></div>);\r\n  }\r\n\r\n}","import React from 'react';\r\nimport { Layout, PageHeader, Button, Form, Tag, Checkbox, Row, Col } from 'antd';\r\nimport './Discord.css';\r\nimport * as cache from '../../cache';\r\nimport EventEmitter from 'events';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nconst formItemLayout = {\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 24 },\r\n  }\r\n};\r\n\r\nexport default class Discord extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAuthenticated: false,\r\n      token: 'Oops. Token was not ready. Try again.',\r\n      invite: 'https://discord.gg/SS36nE'\r\n    } \r\n  }\r\n\r\n  componentDidMount() {\r\n    const data = cache.get('discord');\r\n    this.setState({\r\n      isAuthenticated: data.isAuthenticated\r\n    });\r\n\r\n    if (window.alt === undefined) {\r\n      window.alt = new EventEmitter();\r\n    }\r\n\r\n    window.alt.on('main-menu:DiscordInfo', this.ready.bind(this));\r\n    window.alt.on('main-menu:DiscordDone', this.done.bind(this));\r\n    setTimeout(() => {\r\n      window.alt.emit('main-menu:DiscordReady');\r\n    }, 100);\r\n  }\r\n\r\n  ready(token, invite) {\r\n    this.setState({ token, invite });\r\n  }\r\n\r\n  done() {\r\n    this.setState({\r\n      isAuthenticated: true\r\n    });\r\n  }\r\n\r\n  copy() {\r\n    let target = document.createElement('input');\r\n    document.body.appendChild(target);\r\n    target.value = this.state.token;\r\n    target.select();\r\n    target.setSelectionRange(0, 99999);\r\n    document.execCommand('copy');\r\n    document.body.removeChild(target);\r\n    target = undefined;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    cache.save('discord', {\r\n      isAuthenticated: this.state.isAuthenticated\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout style={{ backgroundColor: 'transparent' }}>\r\n        <Header style={{ backgroundColor: 'transparent', padding: '0' }}>\r\n          <PageHeader\r\n            title='Discord'\r\n            subTitle='It could not be better'\r\n          />\r\n        </Header>\r\n        <Layout style={{ backgroundColor: 'transparent',  marginTop: '40px'  }}>\r\n          <Content>\r\n            { this.state.isAuthenticated ? \r\n              <Form layout='vertical' {...formItemLayout} style={{ paddingLeft: '24px', paddingRight: '24px' }}>\r\n                <Form.Item>\r\n                  <div style={{ fontSize: '18px', color: 'white' }}>Settings <Tag color='#FF0000'>Soon</Tag></div>\r\n                </Form.Item>\r\n                <Form.Item label='Stats'>\r\n                  <Row>\r\n                    <Col span={22}>\r\n                      Enable Public Stats\r\n                    </Col>\r\n                    <Col span={2}>\r\n                      <Checkbox />\r\n                    </Col>\r\n                  </Row>\r\n                </Form.Item>\r\n              </Form>\r\n              :\r\n              <div style={{ paddingLeft: '24px', paddingRight: '24px' }}>\r\n                <p>Connect to our Discord server using the invite link below. Hit the button below to copy your token and send private message to our bot.</p>\r\n                <p><a href={this.state.invite}>discord.gg/SS36nE</a></p>\r\n                <p>\r\n                  <Button\r\n                    size='large'\r\n                    style={{ textAlign: 'center', backgroundColor: 'rgba(0,0,0,0.7)'}}\r\n                    type='ghost'\r\n                    onClick={this.copy.bind(this)}\r\n                    block\r\n                  >\r\n                    Copy The Token\r\n                  </Button>\r\n                </p>\r\n              </div>\r\n            }\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport './animate.css';\nimport { Card, Button, Statistic } from 'antd';\nimport Queue from \"./components/queue/Queue\";\nimport Character from \"./components/character/Character\";\nimport Settings from \"./components/settings/Settings\";\nimport Exit from \"./components/exit/Exit\";\nimport * as cache from './cache';\nimport { GiSwordwoman, GiSleepy, GiHouse, GiGamepad, GiPoloShirt, GiSettingsKnobs } from \"react-icons/gi\";\nimport { FaDiscord } from 'react-icons/fa';\nimport Discord from './components/discord/Discord';\nimport EventEmitter from 'events';\n\n// Game icons\n// https://game-icons.net/\n// https://motionarray.com/browse?free=true&utm_source=youtube&utm_medium=desc&utm_campaign=youtube_resources_desc\n\nconst components = [\n  {\n    title: 'Discord',\n    id: 'discord',\n    icon: 'contacts',\n    component: <Discord />\n  },\n  {\n    title: 'Queue',\n    id: 'queue',\n    icon: 'login',\n    component: <Queue />\n  },\n  {\n    title: 'Character',\n    id: 'character',\n    icon: 'skin',\n    component: <Character />\n  },\n  {\n    title: 'Settings',\n    id: 'settings',\n    icon: 'setting',\n    component: <Settings />\n  },\n  {\n    title: 'Exit',\n    id: 'exit',\n    icon: 'disconnect',\n    component: <Exit />\n  },\n];\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isAuthenticated: false,\n      playing: 0,\n      waiting: 0,\n      currentPage: 'menu',\n      mainClass: 'animated slideInLeft leftPanel',\n    };\n  }\n\n  componentDidMount() {\n    const discord = cache.get('discord');\n    const data = cache.get('onlinePlayers');\n    this.setState({\n      playing: data.playing,\n      waiting: data.waiting,\n      isAuthenticated: discord.isAuthenticated,\n      currentPage: discord.isAuthenticated ? 'menu' : 'discord'\n    });\n\n    if (window.alt === undefined) {\n      window.alt = new EventEmitter();\n    }\n\n    window.alt.on('main-menu:DiscordDone', this.done.bind(this));\n    window.alt.on('main-menu:UpdateOnlinePlayers', this.updateOnlinePlayers.bind(this));\n    setTimeout(() => {\n      window.alt.emit('main-menu:AppReady');\n    }, 100);    \n  }\n\n  done() {\n    this.setState({\n      isAuthenticated: true,\n      currentPage: 'menu'\n    });\n  }\n\n  componentWillUnmount() {\n    cache.save('onlinePlayers', {\n      playing: this.state.playing,\n      waiting: this.state.waiting\n    });\n    cache.save('discord', {\n      isAuthenticated: this.state.isAuthenticated\n    })\n  }\n\n  updateOnlinePlayers(data) {\n    if (data.hasOwnProperty('playing') && data.hasOwnProperty('waiting')) {\n      this.setState({ playing: data.playing, waiting: data.waiting });\n    }\n  }\n\n  changePage(id) {\n    if (this.state.currentPage === id) return;\n    if (!this.state.isAuthenticated) return; \n\n    this.setState({ mainClass: 'animated fadeOutLeft leftPanel' });\n    setTimeout(() => {\n      this.setState({ mainClass: 'animated fadeInLeft leftPanel', currentPage: id });\n    }, 500);\n  }\n\n  render() {\n    if (this.state.currentPage === 'menu') {\n      return (\n        <div>\n          <Card className='animated pulse onlinePlayers' bordered={false}>\n            <Statistic title='Playing' value={this.state.playing} prefix={<GiSwordwoman />} />\n            <Statistic title='Waiting' value={this.state.waiting} prefix={<GiSleepy />} />\n          </Card>\n          <Card className={this.state.mainClass} bordered={false}>\n            {  }\n            <div style={{ marginTop: '40%' }}>\n              { this.state.currentPage === 'menu' && components.map((item) => {\n                return (\n                  <Button\n                    key={item.id}\n                    size='large'\n                    icon={item.icon}\n                    style={{ marginBottom: '20px', textAlign: 'left', backgroundColor: 'rgba(0,0,0,0.7)' }}\n                    type='dashed'\n                    onClick={this.changePage.bind(this, item.id)}\n                    block\n                  >\n                    {item.title}\n                  </Button>\n                );\n              })}\n            </div>\n          </Card>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <Card className='animated pulse onlinePlayers' bordered={false}>\n          <Statistic title='Playing' value={this.state.playing} prefix={<GiSwordwoman />} />\n          <Statistic title='Waiting' value={this.state.waiting} prefix={<GiSleepy />} />\n        </Card>\n        <Card className={this.state.mainClass} bordered={false}>\n          <div style={{ paddingLeft: '24px', paddingRight: '24px' }}>\n            <GiHouse\n              className='zoom'\n              size='6vh'\n              color='white'\n              style={{ marginRight: '2vw' }}\n              onClick={this.changePage.bind(this, 'menu')}\n            />\n            <FaDiscord \n              className='zoom'\n              size='6vh'\n              color={this.state.currentPage === 'discord' ? '#3a4a63' : 'white' }\n              style={{ marginRight: '2vw' }}\n              onClick={this.changePage.bind(this, 'discord')}\n            />\n            <GiGamepad\n              className='zoom'\n              size='6vh'\n              color={this.state.currentPage === 'queue' ? '#3a4a63' : 'white' }\n              style={{ marginRight: '2vw' }}\n              onClick={this.changePage.bind(this, 'queue')}\n            />\n            <GiPoloShirt\n              className='zoom'\n              size='6vh'\n              color={this.state.currentPage === 'character' ? '#3a4a63' : 'white' }\n              style={{ marginRight: '2vw' }}\n              onClick={this.changePage.bind(this, 'character')}\n            />\n            <GiSettingsKnobs\n              className='zoom'\n              size='6vh'\n              color={this.state.currentPage === 'settings' ? '#3a4a63' : 'white' }\n              onClick={this.changePage.bind(this, 'settings')}\n            />\n          </div>\n          { components.find(value => {\n            return this.state.currentPage === value.id;\n          }).component }\n        </Card>\n      </div>\n    );\n  }\n\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}